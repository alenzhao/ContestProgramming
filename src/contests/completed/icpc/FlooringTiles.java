package contests.completed.icpc;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.StringTokenizer;

public class FlooringTiles {
  String[] res = { "1", "2", "4", "6", "16", "12", "64", "24", "36", "48", "1024", "60", "4096",
      "192", "144", "120", "65536", "180", "262144", "240", "576", "3072", "4194304", "360",
      "1296", "12288", "900", "960", "268435456", "720", "1073741824", "840", "9216", "196608",
      "5184", "1260", "68719476736", "786432", "36864", "1680", "1099511627776", "2880",
      "4398046511104", "15360", "3600", "12582912", "70368744177664", "2520", "46656", "6480",
      "589824", "61440", "4503599627370496", "6300", "82944", "6720", "2359296", "805306368",
      "288230376151711744", "5040", "1152921504606846976", "3221225472", "14400", "7560", "331776",
      "46080", "73786976294838206464", "983040", "37748736", "25920", "1180591620717411303424",
      "10080", "4722366482869645213696", "206158430208", "32400", "3932160", "746496", "184320",
      "302231454903657293676544", "15120", "44100", "3298534883328", "4835703278458516698824704",
      "20160", "5308416", "13194139533312", "2415919104", "107520", "309485009821345068724781056",
      "25200", "2985984", "62914560", "9663676416", "211106232532992", "21233664", "27720",
      "79228162514264337593543950336", "233280", "230400", "45360",
      "1267650600228229401496703205376", "2949120", "5070602400912917605986812821504", "430080",
      "129600", "13510798882111488", "81129638414606681695789005144064", "50400",
      "324518553658426726783156020576256", "414720", "618475290624", "60480",
      "5192296858534827628530496329220096", "11796480", "339738624", "4026531840", "921600",
      "864691128455135232", "47775744", "55440", "60466176", "3458764513820540928",
      "9895604649984", "16106127360", "810000", "100800", "85070591730234615865843651857942052864",
      "83160", "39582418599936", "1658880", "1361129467683753853853498429727072845824", "322560",
      "191102976", "221360928884514619392", "176400", "6881280",
      "87112285931760246646623899502532662132736", "188743680",
      "348449143727040986586495598010130648530944", "181440", "633318697598976",
      "3541774862152233910272", "241864704", "110880", "21743271936", "14167099448608935641088",
      "1166400", "1030792151040", "356811923176489970264571492362373784095686656", "226800",
      "1427247692705959881058285969449495136382746624", "27525120", "14745600", "3732480",
      "86973087744", "1290240", "91343852333181432387730302044767688728495783936",
      "906694364710971881029632", "40532396646334464", "166320", "3057647616", "352800",
      "5846006549323611672814739330865132078623730171904", "16492674416640", "2073600",
      "14507109835375550096474112", "93536104789177786765035829293842113257979682750464", "221760",
      "2176782336", "26542080", "58982400", "65970697666560",
      "5986310706507378352962293074805895248510699696029696", "12079595520", "3240000", "967680",
      "2594073385365405696", "928455029464035206174343168",
      "383123885216472214589586756787577295904684780545900544", "277200",
      "1532495540865888858358347027150309183618739122183602176", "14929920",
      "10376293541461622784", "440401920", "5566277615616", "48318382080", "3869835264",
      "1055531162664960", "705600", "106168320",
      "1569275433846670190958947355801916604025588861116008628224", "332640",
      "6277101735386680763835789423207666416102355444464034512896",
      "237684487542793012780631851008", "8294400", "1632960",
      "100433627766186892221372630771322662657637687111424552206336", "1612800",
      "401734511064747568885490523085290650630550748445698208825344", "498960",
      "664082786653543858176", "3802951800684688204490109616128", "195689447424", "20643840",
      "89060441849856", "15211807202738752817960438464512", "943718400", "3870720", "15479341056",
      "907200", "1645504557321206042154969182557350504982735865633579863348609024",
      "67553994410557440", "10625324586456701730816", "243388915243820045087367015432192",
      "356241767399424", "554400", "782757789696", "973555660975280180349468061728768",
      "42501298345826806923264", "2903040", "34828517376", "3092376453120",
      "6739986666787659948666753771754907668409286105635143120275902562304", "665280", "1587600",
      "15576890575604482885591488987660288",
      "107839786668602559178668060348078522694548577690162289924414440996864", "82575360",
      "431359146674410236714672241392314090778194310760649159697657763987456", "1698693120",
      "18662400", "28185722880",
      "6901746346790563787434755862277025452451108972170386555162524223799296", "6451200",
      "5699868278390784", "4323455642275676160", "2720083094132915643088896", "238878720",
      "441711766194596082395824375185729628956870974218904739530401550323154944", "720720",
      "1766847064778384329583297500742918515827483896875618958121606201292619776", "302330880",
      "2822400", "17293822569102704640", "29160000", "49478023249920", "139314069504",
      "112742891520", "43521329506126650289422336", "5670000",
      "1809251394333065553493296640760748560207343510400633813116524750123642650624", "1108800",
      "247669456896", "255211775190703847597530955573826158592", "132710400", "1081080",
      "115792089237316195423570985008687907853269984665640564039457584007913129639936",
      "197912092999680", "50096498540544", "11612160", "60397977600",
      "4083388403051261561560495289181218537472",
      "7410693711188236507108543040556026102609279018600996098525285376506440296955904", "3548160",
      "364791569817010176", "955514880", "2785365088392105618523029504", "1106804644422573096960",
      "474284397516047136454946754595585670566993857190463750305618264096412179005177856",
      "1940400",
      "1897137590064188545819787018382342682267975428761855001222473056385648716020711424",
      "61931520", "74649600", "261336857795280739939871698507597986398208", "51840000",
      "1321205760",
      "121416805764108066932466369176469931665150427440758720078238275608681517825325531136",
      "1045347431181122959759486794030391945592832", "241591910400", "1995840",
      "1942668892225729070919461906823518906642406839052139521251812409738904285205208498176",
      "3166593487994880",
      "7770675568902916283677847627294075626569627356208558085007249638955617140820833992704",
      "17708874310761169551360", "530841600", "1209323520", "801543976648704", "1441440",
      "2821109907456", "108716359680", "713053462628379038341895553024", "70835497243044678205440",
      "7957171782556586274486115970349133441607298412757563479047423630290551952200534008528896",
      "8164800", "23346660468288651264", "7215545057280", "11289600",
      "1070435769529469910793714477087121352287059968", "2229025112064", "2494800" };

  public void solve() throws IOException {
    int a;
    while ((a = nextInt()) != 0) {
      BigInteger first = new BigInteger(res[2 * a - 2]);
      BigInteger second = new BigInteger(res[2 * a - 1]);
      System.out.println(first.min(second).toString());
    }
  }

  public BufferedReader br;
  public StringTokenizer st;
  public PrintWriter out;

  public String nextToken() throws IOException {
    while (st == null || !st.hasMoreTokens()) {
      st = new StringTokenizer(br.readLine());
    }

    return st.nextToken();
  }

  public String nextLine() throws IOException {
    return br.readLine();
  }

  public int nextInt() throws IOException {
    return Integer.parseInt(nextToken());
  }

  public long nextLong() throws IOException {
    return Long.parseLong(nextToken());
  }

  public double nextDouble() throws IOException {
    return Double.parseDouble(nextToken());
  }

  public void run() throws IOException {
    boolean oj = System.getProperty("ONLINE_JUDGE") != null;
    oj = true;
    br = new BufferedReader(
        new InputStreamReader(oj ? System.in : new FileInputStream("input.txt")));
    out = new PrintWriter(oj ? System.out : new FileOutputStream("output.txt"));
    solve();
    out.close();
  }

  public static void main(String[] args) throws IOException {
    new FlooringTiles().run();
  }
}
